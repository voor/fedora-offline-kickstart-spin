# PRODUCT INFO
release_name = 'Custom'
release_short = 'Custom'
release_version = '25'
release_is_layered = False

# GENERAL SETTINGS
bootable = True
buildinstall_kickstart = '/tmp/ks.cfg'
comps_file = 'comps.xml'

variants_file='variants.xml'
sigkeys = ['B82645F2']

hashed_directories = True

# RUNROOT settings
runroot = False

# PKGSET
pkgset_source = 'repos' # koji, repos

# PKGSET - REPOS
pkgset_repos = {'x86_64': [
            'http://mirror.umd.edu/fedora/linux/updates/25/x86_64/',
            'http://mirrors.kernel.org/fedora/releases/25/Everything/x86_64/os/' ] }

filter_system_release_packages = False

# GATHER
gather_source = 'comps'
gather_method = 'deps'
check_deps = False
greedy_method = 'build'

# CREATEREPO
createrepo_c = True
createrepo_checksum = 'sha256'

# CHECKSUMS
media_checksums = ['sha256']
media_checksum_one_file = True
media_checksum_base_filename = '%(release_short)s-%(variant)s-%(version)s-1.3-%(arch)s'
#jigdo
create_jigdo = False

# BUILDINSTALL
buildinstall_method = 'lorax'

# Enables macboot on x86_64 for all variants and disables upgrade image building
# # everywhere.
lorax_options = [
  ('^.*$', {
     'x86_64': {
         'nomacboot': False
     }
     '*': {
         'noupgrade': True
     }
  })
]

# fomat: [(variant_uid_regex, {arch|*: [packages]})]
additional_packages = [
    ('.*', {
        '*': [
            'kernel.*',
            'dracut.*',
            'autocorr-.*',
            'eclipse-nls-.*',
            'hunspell-.*',
            'hyphen-.*',
            'calligra-l10n-.*',
            'kde-l10n-.*',
            'libreoffice-langpack-.*',
            'man-pages-.*',
            'mythes-.*',
            'fedora-*',
            'anaconda',
            'anaconda-widgets',
            'kexec-tools-anaconda-addon',
            'tmux',
            'gdb',
            'dnf',
            'rpm-ostree',
            'pigz',
            'grubby',
            'glibc-all-langpacks',
            'efibootmgr',
            'grub2-efi',
            'grub2-efi-modules',
            'shim',
            'shim-unsigned',
            'grub2',
            'grub2-tools',
            'memtest86+',
            'syslinux',
            'syslinux-nonlinux',
            'plymouth',
            'kernel-modules',
            'kernel-modules-extra',
            'anaconda-dracut',
             'dracut-network',
             'dracut-config-generic',
             'cryptsetup',
             'rpcbind',
             'kbd',
             'kbd-misc',
             'xz',
             'curl',
             'bzip2',
             'systemd-sysv',
             'systemd-units',
             'rsyslog',
             'xorg-x11-drivers',
             'xorg-x11-server-Xorg',
             'xorg-x11-server-utils',
             'xorg-x11-xauth',
             'dbus-x11',
             'metacity',
             'gsettings-desktop-schemas',
             'nm-connection-editor',
             'librsvg2',
             'btrfs-progs',
             'jfsutils',
             'xfsprogs',
             'reiserfs-utils',
             'gfs2-utils',
             'ntfs-3g',
             'ntfsprogs',
             'system-storage-manager',
             'device-mapper-persistent-data',
             'xfsdump',
             'storaged',
             'storaged-iscsi',
             'libblockdev-lvm-dbus',
             'volume_key',
             'nss-tools',
             'selinux-policy-targeted',
             'audit',
             'ethtool',
             'openssh-server',
             'nfs-utils',
             'openssh-clients',
             'tigervnc-server-minimal',
             'tigervnc-server-module',
             'net-tools',
             'bridge-utils',
             'pciutils',
             'usbutils',
             'ipmitool',
             'mt-st',
             'smartmontools',
             'hdparm',
             'pcmciautils',
             'libmlx4',
             'rdma',
             'rng-tools',
             'bitmap-fangsongti-fonts',
             'dejavu-sans-fonts',
             'dejavu-sans-mono-fonts',
             'kacst-farsi-fonts',
             'kacst-qurn-fonts',
             'lklug-fonts',
             'lohit-assamese-fonts',
             'lohit-bengali-fonts',
             'lohit-devanagari-fonts',
             'lohit-gu*-fonts',
             'lohit-kannada-fonts',
             'lohit-odia-fonts',
             'lohit-tamil-fonts',
             'lohit-telugu-fonts',
             'madan-fonts',
             'nhn-nanum-gothic-fonts',
             'smc-meera-fonts',
             'thai-scalable-waree-fonts',
             'vlgothic-fonts',
             'wqy-microhei-fonts',
             'sil-abyssinica-fonts',
             'xorg-x11-fonts-misc',
             'aajohan-comfortaa-fonts',
             'abattis-cantarell-fonts',
             'sil-scheherazade-fonts',
             'jomolhari-fonts',
             'khmeros-base-fonts',
             'sil-padauk-fonts',
             'gdb-gdbserver',
             'libreport-plugin-bugzilla',
             'libreport-plugin-reportuploader',
             'fpaste',
             'vim-minimal',
             'strace',
             'lsof',
             'dump',
             'xz',
             'less',
             'eject',
             'wget',
             'rsync',
             'rsh',
             'bind-utils',
             'ftp',
             'mtr',
             'vconfig',
             'icfg',
             'spice-vdagent',
             'gdisk',
             'hexedit',
             'sg3_utils',
             'notification-daemon',
             'docker-anaconda-addon',
             'enablement-repo',
             'enablement-gateway',
             'autossh',
             'create_ap',
             'dnsmasq',
             'ifdokccid',
             'libselinux-python',
             'libsemanage-python',
             'mariadb-server',
             'mysql-connector-python',
             'NetworkManager',
             'NetworkManager-wifi',
             'nginx',
             'python',
             'python-firewall',
             'python2-dnf',
             'python2-mysql',
             'tar'
        ],
    }),

    ('^Gateway$', {
        '*': [
          'enablement-repo',
          'enablement-gateway',
          'autossh',
          'create_ap',
          'dnsmasq',
          'ifdokccid',
          'libselinux-python',
          'libsemanage-python',
          'mariadb-server',
          'mysql-connector-python',
          'NetworkManager',
          'NetworkManager-wifi',
          'nginx',
          'python',
          'python-firewall',
          'python2-dnf',
          'python2-mysql',
          'tar'
        ],
    })
]

createiso_skip = [
        ('^Workstation$', {
            '*': True,
            'src': True
        }),
        ('^Server$', {
            'src': True
        }),
        ('^Cloud$', {
            '*': True,
            'src': True
        }),
        ('^Everything$', {
            '*': True,
            'src': True
        }),
]

# Image name respecting Fedora's image naming policy
image_name_format = '%(release_short)s-%(variant)s-%(disc_type)s-%(arch)s-%(version)s-1.3.iso'
# # Use the same format for volume id
image_volid_formats = [
     '%(release_short)s-%(variant)s-%(disc_type)s-%(arch)s-%(version)s'
     ]

volume_id_substitutions = {
       'Rawhide': 'rawh',
        'Images': 'img',
   'MATE_Compiz': 'MATE',
      'Security': 'Sec',
'Electronic_Lab': 'Elec',
      'Robotics': 'Robo',
'Scientific_KDE': 'SciK',
 'Astronomy_KDE': 'AstK',
  'Design_suite': 'Dsgn',
         'Games': 'Game',
       'Jam_KDE': 'Jam',
   'Workstation': 'WS',
    'Everything': 'E',
        'Server': 'S',
         'Cloud': 'C',
         'Alpha': 'A',
          'Beta': 'B',
            'TC': 'T',
}

disc_types = {
    'dvd' : 'DVD'
}

live_media = {
    '^Gateway$': [
            {
                'name': 'Fedora-Gateway-Live',
                'kickstart': 'custom-live-flat.ks',
                'arches': ['x86_64'],
                'repo_from': 'Everything',
                'install_tree_from': 'Everything',
                'subvariant': 'Gateway'
            }
        ]
}
